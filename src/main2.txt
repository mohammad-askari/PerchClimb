/**
 * @file main.cpp
 * @author Mohammad Askari (mohammad.askari@epfl.ch)
 * @brief This program ...
 * @version 1.0
 * @date 2023-11
 *
 * @copyright Copyright (c) 2023, Mohammad Askari, Laboratory of Intelligent
 *            Systems (LIS), EPFL, Lausanne, Switzerland (https://lis.epfl.ch).
 *
 **/

// —————————————————————————————————————————————————————————————————————————— //
//                            LIBRARIES & VARIABLES                           //
// —————————————————————————————————————————————————————————————————————————— //
#include <Adafruit_TinyUSB.h>
#include <Arduino.h>
#include <SparkFun_TB6612.h>
#include <ServoInput.h>


#include "functions.h"

// ————————————————————————————— BOARD VARIABLES ———————————————————————————— //
const int  adc_res   = 4095;    // range of xiao's ADC (12-bit resolution)
const int  pwm_res   = 255;     // range of xiao's PWM  (8-bit resolution)
const long baud_rate = 115200;  // serial data rate in bits per second

const byte led_pin[] = {LED_RED, LED_GREEN, LED_BLUE};  // 3-in-1 LED pins

ServoInputPin<8> servo(980,1950);
const int NumPositions = 3;
const int buffer = 1000;
int PositionHistory[buffer];
int iteration = 0;
int state = 0;


// Pins for all inputs, keep in mind the PWM defines must be on PWM pins
#define AIN1 3
#define AIN2 4
#define PWMA 5
#define STBY 2

// this overwrites the motor turning direction: value can be 1 or -1
const int offsetA = 1;

// initializing motor
Motor motor1 = Motor(AIN1, AIN2, PWMA, offsetA, STBY);

// —————————————————————————————————————————————————————————————————————————— //
//                               MAIN FUNCTIONS                               //
// —————————————————————————————————————————————————————————————————————————— //

void setup() {
  // set up serial data communication and transmission speed
  Serial.begin(baud_rate);
  // while (!Serial) delay(10);  // for nrf52840 with native usb

  // set up general purpose input/out pin modes
  for (byte i = 0; i < 3; i++) {
    pinMode(led_pin[i], OUTPUT);
  }

  // int center = servo.getRangeCenter();  // get center value of range
	// servo.setRange(center, center);  // set min/max values to center

	// while (servo.available() == false) {
	// 	Serial.println("Waiting for servo signal...");
	// 	delay(500);
	// }
}

void loop() {
  //int duration = 4000;
  // unsigned long pause = 2000;
    
  // setLED(led_pin, 'R'); motor1.drive(255,8000);
  // setLED(led_pin, 'G'); motor1.brake(); delay(pause);
  // setLED(led_pin, 'B'); motor1.drive(-255,5000);
  // setLED(led_pin, 'G'); motor1.brake(); delay(pause);

  // setLED(led_pin, 'O'); delay(pause);
  // Serial.println("Next Round");


  int position = servo.map(1, NumPositions);
  Serial.print(position);
  PositionHistory[iteration]=position;

  for (int i = 0; i < buffer; i++)
  {
    position += PositionHistory[i];
  }
  float mean = (float)position/buffer;

  if (mean < 1.4 && state != 1)
  {
    setLED(led_pin, 'R'); motor1.brake();
    state = 1;
  }
  else if (mean > 2.5 && state != -1)
  {
    setLED(led_pin, 'B'); motor1.drive(-255);
    state = -1;
  }
  else if (mean < 2.5 && mean > 1.5 && state != 0)
  {
    setLED(led_pin, 'G');motor1.drive(255);
    state = 0;
  }

  if (iteration%10==0)
  {
	  Serial.print(position);
    Serial.print('\t');
	  Serial.print(mean);
    Serial.print('\t');
    Serial.println(state);    
  }
  iteration++;
  if (iteration>=buffer)
  {
    iteration = 0;
  }
  
  
}